install.packages(c("evaluate", "formatR", "highr", "knitr", "manipulate", "maptools", "plyr", "RCurl", "sp"))
library(tidyr)
?gather
install.packages('xgboost')
library(xgboost)
install.packages('xgboost')
install.packages("xgboost")
install.packages("KernSmooth")
library(KernSmooth)
Sys.getenv('MYSQL_HOME')
Sys.getenv('MYSQL_HOME')
Sys.getenv('MYSQL_HOME')
Sys.getenv('MYSQL_HOME')
install.packages(“RMySQL”, type = “source”)
Sys.getenv('MYSQL_HOME')
install.packages('RMySQL',type='source')
library(RMySQL)
> library(httr)
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("github", "ClientID", "ClientSecret")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
fds
oauth_endpoints("github")
myapp <- oauth_app("github",
key = "395bf0ff9109a6db637f",
secret = "e9d7c313b1672f2c546a18b3d3dc79a98a116c92")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
setwd("D:/Coursera/Getting and Cleaning Data")
library(httr)
# 1. Find OAuth settings for github:
#    http://developer.github.com/v3/oauth/
oauth_endpoints("github")
# 2. To make your own application, register at at
#    https://github.com/settings/applications. Use any URL for the homepage URL
#    (http://github.com is fine) and  http://localhost:1410 as the callback url
#
#    Replace your key and secret below.
myapp <- oauth_app("github",
key = "395bf0ff9109a6db637f",
secret = "e9d7c313b1672f2c546a18b3d3dc79a98a116c92")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
content(req)
req <- with_config(gtoken, GET("https://api.github.com/rate_limit"))
stop_for_status(req)
content(req)
BROWSE("https://api.github.com/users/jtleek/repos",authenticate("Access Token","x-oauth-basic","basic"))
acs <- read.csv("data/getdata-data-ss06pid.csv")
sqldf("select pwgtp1 from acs where AGEP < 50")
install.packages("sqldf")
library(sqldf)
sqldf("select pwgtp1 from acs where AGEP < 50")
acs.sub <- sqldf("select pwgtp1 from acs where AGEP < 50")
head(acs.sub)
unique(acs$AGEP)
sqldf("select distinct AGRP from acs")
sqldf("select distinct AGEP from acs")
page <- "http://biostat.jhsph.edu/~jleek/contact.html"
con <- url(page)
htmlCode <- readLines(con)
close(con)
sapply(htmlCode[c(10, 20, 30, 100)], nchar)
file.name <- "data/getdata-wksst8110.for"
data <- read.csv(file.name)
df <- read.fwf(file = file_name,
widths = c(-1,9,-5,4,4,-5,4,4,-5,4,4,-5,4,4),
skip = 4)
df <- read.fwf(file = file.name,
widths = c(-1,9,-5,4,4,-5,4,4,-5,4,4,-5,4,4),
skip = 4)
head(df)
head(data)
sum(df[, 4])
View(df)
mean(df[, 4])
setwd("D:/Coursera/Course materials for the Data Science Specialization/05_ReproducibleResearch/RepData_PeerAssessment1")
df <- read.csv("activity.csv")
str(df)
library(ggplot2)
